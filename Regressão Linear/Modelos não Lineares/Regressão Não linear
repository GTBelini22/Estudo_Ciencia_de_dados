{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOL2XJrY2xZVt/MAb2e9NrT"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":73,"metadata":{"id":"5rde-hc2F1z7","executionInfo":{"status":"ok","timestamp":1705532340553,"user_tz":180,"elapsed":924,"user":{"displayName":"Gustavo Belini","userId":"17970135086859236925"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np"]},{"cell_type":"code","source":["ft = pd.read_excel('/content/drive/MyDrive/Colab Notebooks/Regressão Linear/Modelos não lineares/temps.xlsx')"],"metadata":{"id":"JUoNoMKiGhQk","executionInfo":{"status":"ok","timestamp":1705532621159,"user_tz":180,"elapsed":253,"user":{"displayName":"Gustavo Belini","userId":"17970135086859236925"}}},"execution_count":102,"outputs":[]},{"cell_type":"code","source":["ft.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"ng3Onk4gG0uJ","executionInfo":{"status":"ok","timestamp":1705532509144,"user_tz":180,"elapsed":242,"user":{"displayName":"Gustavo Belini","userId":"17970135086859236925"}},"outputId":"e2078975-0e94-494c-a334-6aa10909eb9b"},"execution_count":82,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   year  month  day  week  temp_2  temp_1  average  actual\n","0  2016      1    1   Fri      45      45     45.6      45\n","1  2016      1    2   Sat      44      45     45.7      44\n","2  2016      1    3   Sun      45      44     45.8      41\n","3  2016      1    4   Mon      44      41     45.9      40\n","4  2016      1    5  Tues      41      40     46.0      44"],"text/html":["\n","  <div id=\"df-ac8024ba-9c62-44c7-9f4c-2ad19b60b8be\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>month</th>\n","      <th>day</th>\n","      <th>week</th>\n","      <th>temp_2</th>\n","      <th>temp_1</th>\n","      <th>average</th>\n","      <th>actual</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Fri</td>\n","      <td>45</td>\n","      <td>45</td>\n","      <td>45.6</td>\n","      <td>45</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>Sat</td>\n","      <td>44</td>\n","      <td>45</td>\n","      <td>45.7</td>\n","      <td>44</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Sun</td>\n","      <td>45</td>\n","      <td>44</td>\n","      <td>45.8</td>\n","      <td>41</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>Mon</td>\n","      <td>44</td>\n","      <td>41</td>\n","      <td>45.9</td>\n","      <td>40</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>Tues</td>\n","      <td>41</td>\n","      <td>40</td>\n","      <td>46.0</td>\n","      <td>44</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ac8024ba-9c62-44c7-9f4c-2ad19b60b8be')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ac8024ba-9c62-44c7-9f4c-2ad19b60b8be button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ac8024ba-9c62-44c7-9f4c-2ad19b60b8be');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fafe61e2-12f0-4658-be2b-e1197dab2dc5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fafe61e2-12f0-4658-be2b-e1197dab2dc5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fafe61e2-12f0-4658-be2b-e1197dab2dc5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":82}]},{"cell_type":"code","source":["ft.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"BXaMsXMeG5Em","executionInfo":{"status":"ok","timestamp":1705532510050,"user_tz":180,"elapsed":6,"user":{"displayName":"Gustavo Belini","userId":"17970135086859236925"}},"outputId":"a179dda5-569e-4e59-953b-3d923981509a"},"execution_count":83,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         year       month         day      temp_2      temp_1     average  \\\n","count   348.0  348.000000  348.000000  348.000000  348.000000  348.000000   \n","mean   2016.0    6.477011   15.514368   62.652299   62.701149   59.760632   \n","std       0.0    3.498380    8.772982   12.165398   12.120542   10.527306   \n","min    2016.0    1.000000    1.000000   35.000000   35.000000   45.100000   \n","25%    2016.0    3.000000    8.000000   54.000000   54.000000   49.975000   \n","50%    2016.0    6.000000   15.000000   62.500000   62.500000   58.200000   \n","75%    2016.0   10.000000   23.000000   71.000000   71.000000   69.025000   \n","max    2016.0   12.000000   31.000000  117.000000  117.000000   77.400000   \n","\n","           actual  \n","count  348.000000  \n","mean    62.543103  \n","std     11.794146  \n","min     35.000000  \n","25%     54.000000  \n","50%     62.500000  \n","75%     71.000000  \n","max     92.000000  "],"text/html":["\n","  <div id=\"df-c21334d4-76e9-43f3-972a-9fb62c3a406f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>month</th>\n","      <th>day</th>\n","      <th>temp_2</th>\n","      <th>temp_1</th>\n","      <th>average</th>\n","      <th>actual</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>348.0</td>\n","      <td>348.000000</td>\n","      <td>348.000000</td>\n","      <td>348.000000</td>\n","      <td>348.000000</td>\n","      <td>348.000000</td>\n","      <td>348.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>2016.0</td>\n","      <td>6.477011</td>\n","      <td>15.514368</td>\n","      <td>62.652299</td>\n","      <td>62.701149</td>\n","      <td>59.760632</td>\n","      <td>62.543103</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.0</td>\n","      <td>3.498380</td>\n","      <td>8.772982</td>\n","      <td>12.165398</td>\n","      <td>12.120542</td>\n","      <td>10.527306</td>\n","      <td>11.794146</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>2016.0</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>35.000000</td>\n","      <td>35.000000</td>\n","      <td>45.100000</td>\n","      <td>35.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2016.0</td>\n","      <td>3.000000</td>\n","      <td>8.000000</td>\n","      <td>54.000000</td>\n","      <td>54.000000</td>\n","      <td>49.975000</td>\n","      <td>54.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>2016.0</td>\n","      <td>6.000000</td>\n","      <td>15.000000</td>\n","      <td>62.500000</td>\n","      <td>62.500000</td>\n","      <td>58.200000</td>\n","      <td>62.500000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2016.0</td>\n","      <td>10.000000</td>\n","      <td>23.000000</td>\n","      <td>71.000000</td>\n","      <td>71.000000</td>\n","      <td>69.025000</td>\n","      <td>71.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>2016.0</td>\n","      <td>12.000000</td>\n","      <td>31.000000</td>\n","      <td>117.000000</td>\n","      <td>117.000000</td>\n","      <td>77.400000</td>\n","      <td>92.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c21334d4-76e9-43f3-972a-9fb62c3a406f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c21334d4-76e9-43f3-972a-9fb62c3a406f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c21334d4-76e9-43f3-972a-9fb62c3a406f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cf05c938-077e-484c-a354-6f9cd59e7105\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cf05c938-077e-484c-a354-6f9cd59e7105')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cf05c938-077e-484c-a354-6f9cd59e7105 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":83}]},{"cell_type":"code","source":["ft.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Xon36fOvHMQh","executionInfo":{"status":"ok","timestamp":1705532510828,"user_tz":180,"elapsed":5,"user":{"displayName":"Gustavo Belini","userId":"17970135086859236925"}},"outputId":"6d9f2e8f-d018-4a35-8862-cc0ab29d6d01"},"execution_count":84,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 348 entries, 0 to 347\n","Data columns (total 8 columns):\n"," #   Column   Non-Null Count  Dtype  \n","---  ------   --------------  -----  \n"," 0   year     348 non-null    int64  \n"," 1   month    348 non-null    int64  \n"," 2   day      348 non-null    int64  \n"," 3   week     348 non-null    object \n"," 4   temp_2   348 non-null    int64  \n"," 5   temp_1   348 non-null    int64  \n"," 6   average  348 non-null    float64\n"," 7   actual   348 non-null    int64  \n","dtypes: float64(1), int64(6), object(1)\n","memory usage: 21.9+ KB\n"]}]},{"cell_type":"code","source":["# Verificado que a variável week está como objeto\n","# One hot code - dummies\n","\n","ft = pd.get_dummies(ft)\n","ft.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"MLd95Kn1HOPO","executionInfo":{"status":"ok","timestamp":1705532623178,"user_tz":180,"elapsed":303,"user":{"displayName":"Gustavo Belini","userId":"17970135086859236925"}},"outputId":"25fe15e3-d389-4d22-e7b9-8a79f020ad62"},"execution_count":103,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   year  month  day  temp_2  temp_1  average  actual  week_Fri  week_Mon  \\\n","0  2016      1    1      45      45     45.6      45         1         0   \n","1  2016      1    2      44      45     45.7      44         0         0   \n","2  2016      1    3      45      44     45.8      41         0         0   \n","3  2016      1    4      44      41     45.9      40         0         1   \n","4  2016      1    5      41      40     46.0      44         0         0   \n","\n","   week_Sat  week_Sun  week_Thurs  week_Tues  week_Wed  \n","0         0         0           0          0         0  \n","1         1         0           0          0         0  \n","2         0         1           0          0         0  \n","3         0         0           0          0         0  \n","4         0         0           0          1         0  "],"text/html":["\n","  <div id=\"df-14400565-2fd8-4ca9-8100-16122f2eaf35\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>month</th>\n","      <th>day</th>\n","      <th>temp_2</th>\n","      <th>temp_1</th>\n","      <th>average</th>\n","      <th>actual</th>\n","      <th>week_Fri</th>\n","      <th>week_Mon</th>\n","      <th>week_Sat</th>\n","      <th>week_Sun</th>\n","      <th>week_Thurs</th>\n","      <th>week_Tues</th>\n","      <th>week_Wed</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>45</td>\n","      <td>45</td>\n","      <td>45.6</td>\n","      <td>45</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>44</td>\n","      <td>45</td>\n","      <td>45.7</td>\n","      <td>44</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>45</td>\n","      <td>44</td>\n","      <td>45.8</td>\n","      <td>41</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>44</td>\n","      <td>41</td>\n","      <td>45.9</td>\n","      <td>40</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2016</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>41</td>\n","      <td>40</td>\n","      <td>46.0</td>\n","      <td>44</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-14400565-2fd8-4ca9-8100-16122f2eaf35')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-14400565-2fd8-4ca9-8100-16122f2eaf35 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-14400565-2fd8-4ca9-8100-16122f2eaf35');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4cf4e2c8-54d6-493f-aa6b-9f77a008db49\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4cf4e2c8-54d6-493f-aa6b-9f77a008db49')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4cf4e2c8-54d6-493f-aa6b-9f77a008db49 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":103}]},{"cell_type":"code","source":["ft.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P4NRypD0JaVM","executionInfo":{"status":"ok","timestamp":1705532513021,"user_tz":180,"elapsed":334,"user":{"displayName":"Gustavo Belini","userId":"17970135086859236925"}},"outputId":"5fb434ab-6f9f-4e4e-f8bd-8d240207b83d"},"execution_count":86,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['year', 'month', 'day', 'temp_2', 'temp_1', 'average', 'actual',\n","       'week_Fri', 'week_Mon', 'week_Sat', 'week_Sun', 'week_Thurs',\n","       'week_Tues', 'week_Wed'],\n","      dtype='object')"]},"metadata":{},"execution_count":86}]},{"cell_type":"code","source":["# Pegando o X e Y\n","\n","labels = np.array(ft['actual'])\n","\n","# Axis = 1 retira a coluna deixando somente os dados, pois aqui estamos construindo um array numpy\n","ft = ft.drop('actual' , axis=1)\n","\n","ft_list =  list(ft.columns)\n","\n","ft = np.array(ft)"],"metadata":{"id":"RI3JMNL6Hfl2","executionInfo":{"status":"ok","timestamp":1705532625161,"user_tz":180,"elapsed":355,"user":{"displayName":"Gustavo Belini","userId":"17970135086859236925"}}},"execution_count":104,"outputs":[]},{"cell_type":"code","source":["print(ft)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VAA5uTpSqT-e","executionInfo":{"status":"ok","timestamp":1705532548736,"user_tz":180,"elapsed":248,"user":{"displayName":"Gustavo Belini","userId":"17970135086859236925"}},"outputId":"25340706-2c23-48d5-e7ad-3e0344f4e23a"},"execution_count":91,"outputs":[{"output_type":"stream","name":"stdout","text":["[[2016 1 1 ... 45 45 45.6]\n"," [2016 1 2 ... 44 45 45.7]\n"," [2016 1 3 ... 45 44 45.8]\n"," ...\n"," [2016 12 29 ... 47 48 45.3]\n"," [2016 12 30 ... 48 48 45.4]\n"," [2016 12 31 ... 48 57 45.5]]\n"]}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","train_ft, test_ft, train_labels, test_labels = train_test_split(ft,labels, test_size=0.25, random_state=42)"],"metadata":{"id":"KU5spQn0Jwvp","executionInfo":{"status":"ok","timestamp":1705532626654,"user_tz":180,"elapsed":229,"user":{"displayName":"Gustavo Belini","userId":"17970135086859236925"}}},"execution_count":105,"outputs":[]},{"cell_type":"markdown","source":["Treinamento dos modelos"],"metadata":{"id":"jtLKXqaALwUO"}},{"cell_type":"code","source":["# tomando a media de baseline, assim podemos ver se o nosso modelo está melhor ou pior que a media.\n","\n","baselin_preds = test_ft[:, ft_list.index('average')]\n","\n","baseline_error = abs(baselin_preds - test_labels)\n","\n","print('baseline error average', round(np.mean(baseline_error), 2))\n","# Agora com esse retorno podemos ver se os nossos métodos de previsão vão estar melhor que esse valor"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9I2sIvYzKWyv","executionInfo":{"status":"ok","timestamp":1705532627788,"user_tz":180,"elapsed":229,"user":{"displayName":"Gustavo Belini","userId":"17970135086859236925"}},"outputId":"e8c83657-d766-489f-a6f4-c67e6db2a51b"},"execution_count":106,"outputs":[{"output_type":"stream","name":"stdout","text":["baseline error average 5.06\n"]}]},{"cell_type":"code","source":["from sklearn.datasets import make_moons\n","from sklearn import metrics\n","from sklearn.tree import DecisionTreeRegressor\n","from sklearn.ensemble import RandomForestRegressor, AdaBoostRegressor, GradientBoostingRegressor"],"metadata":{"id":"yyYnl670MwlZ","executionInfo":{"status":"ok","timestamp":1705532628799,"user_tz":180,"elapsed":3,"user":{"displayName":"Gustavo Belini","userId":"17970135086859236925"}}},"execution_count":107,"outputs":[]},{"cell_type":"code","source":["# Estimadores é quantas vezes isso vai rodar\n","rf = RandomForestRegressor(n_estimators=1000, random_state=42)\n","rf.fit(train_ft, train_labels)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"82Mzs-5ONJoI","executionInfo":{"status":"ok","timestamp":1705532633131,"user_tz":180,"elapsed":3310,"user":{"displayName":"Gustavo Belini","userId":"17970135086859236925"}},"outputId":"9323a879-b9f5-40d8-b707-be7bc15de232"},"execution_count":108,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomForestRegressor(n_estimators=1000, random_state=42)"],"text/html":["<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestRegressor(n_estimators=1000, random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestRegressor</label><div class=\"sk-toggleable__content\"><pre>RandomForestRegressor(n_estimators=1000, random_state=42)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":108}]},{"cell_type":"code","source":["prediction_rf = rf.predict(test_ft)\n","\n","error_rf= abs(prediction_rf - test_labels)\n","\n","r_sq = rf.score(ft, labels)\n","\n","print('R2: ', r_sq)\n","print('MAE:', metrics.mean_absolute_error(test_labels, prediction_rf))\n","print('MSE:', metrics.mean_squared_error(test_labels, prediction_rf))\n","\n","# Vendo que  MAE está mais baixo que a propria média, isso mostra que o modelo de previsão está melhor"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e2NAce7vNuoO","executionInfo":{"status":"ok","timestamp":1705532636160,"user_tz":180,"elapsed":235,"user":{"displayName":"Gustavo Belini","userId":"17970135086859236925"}},"outputId":"aaa6552b-eb94-4d14-f020-1885d93c57c4"},"execution_count":109,"outputs":[{"output_type":"stream","name":"stdout","text":["R2:  0.932094797587982\n","MAE: 3.932057471264368\n","MSE: 26.68358100000001\n"]}]},{"cell_type":"markdown","source":["AdaBoostegressor"],"metadata":{"id":"e0X09qVHWnpI"}},{"cell_type":"code","source":["ada = AdaBoostRegressor(n_estimators=100)\n","\n","# Treinando\n","ada.fit(train_ft, train_labels)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"OmMKbV3sWmdo","executionInfo":{"status":"ok","timestamp":1705532663388,"user_tz":180,"elapsed":286,"user":{"displayName":"Gustavo Belini","userId":"17970135086859236925"}},"outputId":"ae864cc5-ccde-48b2-a68b-3768c4a3448e"},"execution_count":111,"outputs":[{"output_type":"execute_result","data":{"text/plain":["AdaBoostRegressor(n_estimators=100)"],"text/html":["<style>#sk-container-id-5 {color: black;background-color: white;}#sk-container-id-5 pre{padding: 0;}#sk-container-id-5 div.sk-toggleable {background-color: white;}#sk-container-id-5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-5 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-5 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-5 div.sk-item {position: relative;z-index: 1;}#sk-container-id-5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-5 div.sk-item::before, #sk-container-id-5 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-5 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-5 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-5 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-5 div.sk-label-container {text-align: center;}#sk-container-id-5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-5 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-5\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>AdaBoostRegressor(n_estimators=100)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" checked><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">AdaBoostRegressor</label><div class=\"sk-toggleable__content\"><pre>AdaBoostRegressor(n_estimators=100)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":111}]},{"cell_type":"code","source":["ada_pred = ada.predict(test_ft)\n","\n","error_ada = abs(ada_pred - test_labels)\n","\n","r_sq = ada.score(ft, labels)\n","print('R2: ', r_sq)\n","print('MAE:', metrics.mean_absolute_error(test_labels, ada_pred))\n","print('MSE:', metrics.mean_squared_error(test_labels, ada_pred))\n","\n","# Modelo perfou melhor que o randomforest"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7BLmznIBXGdR","executionInfo":{"status":"ok","timestamp":1705532664660,"user_tz":180,"elapsed":278,"user":{"displayName":"Gustavo Belini","userId":"17970135086859236925"}},"outputId":"8bed48ea-82f1-4ce7-bc28-abb2f3956ab5"},"execution_count":112,"outputs":[{"output_type":"stream","name":"stdout","text":["R2:  0.8832413942923188\n","MAE: 3.585896854791825\n","MSE: 21.576405527590367\n"]}]},{"cell_type":"markdown","source":["GradientBoost"],"metadata":{"id":"dT25FTpSYZw4"}},{"cell_type":"code","source":["gbr = GradientBoostingRegressor(n_estimators=100)\n","\n","gbr.fit(train_ft, train_labels)\n","gbr_pred = gbr.predict(test_ft)"],"metadata":{"id":"O7mD20WDYeUJ","executionInfo":{"status":"ok","timestamp":1705527947859,"user_tz":180,"elapsed":840,"user":{"displayName":"Gustavo Belini","userId":"17970135086859236925"}}},"execution_count":67,"outputs":[]},{"cell_type":"code","source":["error_gbr = abs(gbr_pred - test_labels)\n","\n","r_sq = gbr.score(ft, labels)\n","print('R2: ', r_sq)\n","print('MAE:', metrics.mean_absolute_error(test_labels, gbr_pred))\n","print('MSE:', metrics.mean_squared_error(test_labels, gbr_pred))\n","\n","# Erro médio está maior que os demais"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kOFj5AxvYzev","executionInfo":{"status":"ok","timestamp":1705532671667,"user_tz":180,"elapsed":630,"user":{"displayName":"Gustavo Belini","userId":"17970135086859236925"}},"outputId":"726d13a5-5af2-4a15-c041-dba73a07bf69"},"execution_count":113,"outputs":[{"output_type":"stream","name":"stdout","text":["R2:  0.9174483261980884\n","MAE: 4.086842097909145\n","MSE: 28.588903956980875\n"]}]},{"cell_type":"markdown","source":["#Representação da Arvore de decisão"],"metadata":{"id":"iBPEH6UrZR6o"}},{"cell_type":"code","source":["# # camadas de nós para analisarmos\n","rf = RandomForestRegressor(max_depth=3)\n","rf.fit(train_ft, train_labels)\n","\n","tree = rf.estimators_[5]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"EBWES5VqZWQd","executionInfo":{"status":"ok","timestamp":1705532739790,"user_tz":180,"elapsed":709,"user":{"displayName":"Gustavo Belini","userId":"17970135086859236925"}},"outputId":"d00a71ec-71b8-420f-c9b0-31db7179c7d3"},"execution_count":117,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DecisionTreeRegressor(max_depth=3, max_features=1.0, random_state=522766430)"],"text/html":["<style>#sk-container-id-7 {color: black;background-color: white;}#sk-container-id-7 pre{padding: 0;}#sk-container-id-7 div.sk-toggleable {background-color: white;}#sk-container-id-7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-7 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-7 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-7 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-7 div.sk-item {position: relative;z-index: 1;}#sk-container-id-7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-7 div.sk-item::before, #sk-container-id-7 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-7 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-7 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-7 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-7 div.sk-label-container {text-align: center;}#sk-container-id-7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-7 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-7\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeRegressor(max_depth=3, max_features=1.0, random_state=522766430)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-7\" type=\"checkbox\" checked><label for=\"sk-estimator-id-7\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeRegressor</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeRegressor(max_depth=3, max_features=1.0, random_state=522766430)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":117}]},{"cell_type":"code","source":["from sklearn.tree import export_graphviz\n","import pydot"],"metadata":{"id":"b7YzcvqwrJUa","executionInfo":{"status":"ok","timestamp":1705532780854,"user_tz":180,"elapsed":9,"user":{"displayName":"Gustavo Belini","userId":"17970135086859236925"}}},"execution_count":119,"outputs":[]},{"cell_type":"code","source":["# Exportando a nossa arvore\n","export_graphviz(tree, out_file='tree.dot', feature_names= ft_list, rounded= True, precision=1 )\n","(graph, ) = pydot.graph_from_dot_file('tree.dot')\n","graph.write_png('tree.png')"],"metadata":{"id":"0ojHJ127aVSy","executionInfo":{"status":"ok","timestamp":1705532911142,"user_tz":180,"elapsed":1009,"user":{"displayName":"Gustavo Belini","userId":"17970135086859236925"}}},"execution_count":122,"outputs":[]},{"cell_type":"markdown","source":["**feature_importances_**\n","\n","\n","perceber quais variáveis são mais importantes para o nosso modelo"],"metadata":{"id":"5Va7ZW7yr_48"}},{"cell_type":"code","source":["importances = list(rf.feature_importances_)\n","\n","feature_importances = [(ft, round(importance, 2)) for ft, importance in zip(ft_list, importances)]\n","\n","feature_importances = sorted(feature_importances, key=lambda x : x[1], reverse = True)\n","\n","[print('Feature: {:20} Importance {}'. format(*pair)) for pair in feature_importances];"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_nUVonBxsMpP","executionInfo":{"status":"ok","timestamp":1705533351327,"user_tz":180,"elapsed":292,"user":{"displayName":"Gustavo Belini","userId":"17970135086859236925"}},"outputId":"4b047d3c-4dc7-4c97-f699-8c131cb00858"},"execution_count":127,"outputs":[{"output_type":"stream","name":"stdout","text":["Feature: temp_1               Importance 0.77\n","Feature: average              Importance 0.21\n","Feature: month                Importance 0.01\n","Feature: temp_2               Importance 0.01\n","Feature: year                 Importance 0.0\n","Feature: day                  Importance 0.0\n","Feature: week_Fri             Importance 0.0\n","Feature: week_Mon             Importance 0.0\n","Feature: week_Sat             Importance 0.0\n","Feature: week_Sun             Importance 0.0\n","Feature: week_Thurs           Importance 0.0\n","Feature: week_Tues            Importance 0.0\n","Feature: week_Wed             Importance 0.0\n"]}]},{"cell_type":"code","source":["importances = list(ada.feature_importances_)\n","\n","feature_importances = [(ft, round(importance, 2)) for ft, importance in zip(ft_list, importances)]\n","\n","feature_importances = sorted(feature_importances, key=lambda x : x[1], reverse = True)\n","\n","[print('Feature: {:20} Importance {}'. format(*pair)) for pair in feature_importances];"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZHTG5T--tilo","executionInfo":{"status":"ok","timestamp":1705533396661,"user_tz":180,"elapsed":261,"user":{"displayName":"Gustavo Belini","userId":"17970135086859236925"}},"outputId":"63f8089f-2265-4592-9580-6e2dadf4b80b"},"execution_count":128,"outputs":[{"output_type":"stream","name":"stdout","text":["Feature: temp_1               Importance 0.51\n","Feature: average              Importance 0.25\n","Feature: temp_2               Importance 0.09\n","Feature: month                Importance 0.06\n","Feature: week_Mon             Importance 0.03\n","Feature: day                  Importance 0.02\n","Feature: week_Sun             Importance 0.01\n","Feature: year                 Importance 0.0\n","Feature: week_Fri             Importance 0.0\n","Feature: week_Sat             Importance 0.0\n","Feature: week_Thurs           Importance 0.0\n","Feature: week_Tues            Importance 0.0\n","Feature: week_Wed             Importance 0.0\n"]}]}]}